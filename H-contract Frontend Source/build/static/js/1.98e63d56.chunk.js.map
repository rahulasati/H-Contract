{"version":3,"sources":["../static/js/1.98e63d56.chunk.js","Modules/MyContract.js","../node_modules/moment/moment.js","../node_modules/webpack/buildin/module.js","utils/Formats.js"],"names":["webpackJsonp","189","module","__webpack_exports__","__webpack_require__","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1__utils_api_js__","__WEBPACK_IMPORTED_MODULE_2_jquery__","__WEBPACK_IMPORTED_MODULE_2_jquery___default","__WEBPACK_IMPORTED_MODULE_3_react_router_dom__","__WEBPACK_IMPORTED_MODULE_4__loader_svg__","__WEBPACK_IMPORTED_MODULE_4__loader_svg___default","__WEBPACK_IMPORTED_MODULE_5__components_Header_js__","__WEBPACK_IMPORTED_MODULE_6__utils_Formats__","__WEBPACK_IMPORTED_MODULE_7_moment__","__WEBPACK_IMPORTED_MODULE_7_moment___default","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","MyContract","_Component","this","_this","getPrototypeOf","getBonusDetails","get","then","response","details","data","setState","state","_this2","getInstance","updateTitle","localStorage","getItem","setTimeout","addClass","on","closest","find","slideToggle","animate","scrollTop","offset","top","status","DEPLOYED","FAILED_TO_DEPLOY","WAITING_FOR_DEPLOYMENT","statusclassName","map","list","a","createElement","className","src","alt","name","deployment_status","contract_owner","substring","title","onClick","copyToClipboard","transactionHash","href","contract_address","DateFormat","create_date","opening_time","format","end_time","hardcap_tokens","investment_storage","min_investment","max_investment","rate","token_name","token_symbol","bonus_percent","team_address","team_tokens","tranferrable","whitelisting","changedate","to","192","exports","global","factory","hooks","hookCallback","apply","arguments","isArray","input","Array","toString","isObject","isObjectEmpty","obj","getOwnPropertyNames","k","hasOwnProperty","isUndefined","isNumber","isDate","Date","arr","fn","res","push","hasOwnProp","b","extend","valueOf","createUTC","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","m","_pf","isValid","_isValid","flags","parsedParts","some","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","isFrozen","createInvalid","NaN","copyConfig","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","args","slice","join","Error","stack","deprecateSimple","deprecations","isFunction","Function","set","_config","_dayOfMonthOrdinalParseLenient","RegExp","_dayOfMonthOrdinalParse","source","_ordinalParse","mergeConfigs","parentConfig","childConfig","Locale","calendar","mom","now","output","_calendar","longDateFormat","_longDateFormat","formatUpper","toUpperCase","replace","invalidDate","_invalidDate","ordinal","_ordinal","relativeTime","withoutSuffix","string","isFuture","_relativeTime","pastFuture","diff","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","addUnitPriority","priority","priorities","getPrioritizedUnits","unitsObj","u","sort","zeroFill","targetLength","forceSign","absNumber","zerosToFill","pow","max","substr","addFormatToken","token","padded","callback","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","formatMoment","expandFormat","formatFunctions","replaceLongDateFormatTokens","localFormattingTokens","lastIndex","test","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","unescapeFormat","s","regexEscape","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInYear","year","isLeapYear","getIsLeapYear","makeGetSet","keepTime","set$1","month","date","daysInMonth","stringGet","stringSet","prioritized","mod","x","modMonth","localeMonths","_months","isFormat","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","handleStrictParse","monthName","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","months","indexOf","localeMonthsParse","_monthsParseExact","setMonth","dayOfMonth","monthsParse","getSetMonth","getDaysInMonth","monthsShortRegex","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","defaultMonthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","defaultMonthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","createDate","y","d","h","M","ms","getFullYear","setFullYear","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","localeWeek","_week","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","add","getSetISOWeek","parseWeekday","weekdaysParse","parseInt","parseIsoWeekday","localeWeekdays","_weekdays","day","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","handleStrictParse$1","weekdayName","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","weekdaysMin","weekdaysShort","weekdays","localeWeekdaysParse","_weekdaysParseExact","_fullWeekdaysParse","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","defaultWeekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","defaultWeekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","defaultWeekdaysMinRegex","minp","shortp","longp","minPieces","hFormat","hours","kFormat","lowercase","minutes","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","normalizeLocale","chooseLocale","names","j","next","split","loadLocale","globalLocale","oldLocale","locales","_abbr","e","code","getSetGlobalLocale","values","getLocale","defineLocale","baseConfig","abbr","parentLocale","localeFamilies","forEach","updateLocale","tmpLocale","listLocales","keys","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","defaults","c","currentDateArray","nowValue","_useUTC","getUTCMonth","getUTCDate","getMonth","getDate","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","curWeek","gg","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","extendedIsoRegex","exec","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","defaultLocaleMonthsShort","preprocessRFC2822","checkWeekday","weekdayStr","parsedInput","defaultLocaleWeekdaysShort","calculateOffset","obsOffset","militaryOffset","numOffset","obsOffsets","hm","configFromRFC2822","parsedArray","configFromString","aspNetJsonRegex","createFromInputFallback","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","_meridiem","meridiemFixWrap","hour","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","isDurationValid","ordering","unitHasDecimal","parseFloat","isValid$1","createInvalid$1","createDuration","Duration","duration","years","quarters","quarter","weeks","days","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","absRound","round","separator","utcOffset","sign","offsetFromString","matcher","matches","chunk","parts","chunkOffset","cloneWithOffset","model","clone","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","keepMinutes","localAdjust","matchShortOffset","_changeInProgress","addSubtract","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","tZone","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","getCalendarFormat","myMoment","calendar$1","time","formats","sod","startOf","calendarFormat","localInput","endOf","isBetween","inclusivity","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","that","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","toISOString","keepOffset","toDate","inspect","zone","prefix","suffix","inputString","defaultFormatUtc","defaultFormat","postformat","humanize","fromNow","toNow","newLocaleData","isoWeekday","unix","toObject","toJSON","isValid$2","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","getSetDayOfYear","parseMs","getZoneAbbr","getZoneName","createUnix","createInZone","parseZone","preParsePostFormat","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","listMonths","listMonthsShort","listWeekdays","listWeekdaysShort","listWeekdaysMin","mathAbs","addSubtract$1","add$1","subtract$1","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","valueOf$1","makeAs","alias","clone$1","get$2","makeGetter","substituteTimeAgo","relativeTime$1","posNegDuration","thresholds","ss","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","withSuffix","toISOString$1","abs$1","Y","D","toFixed","total","asSeconds","totalSign","ymSign","daysSign","hmsSign","fun","t","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultDayOfMonthOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","parseTwoDigitYear","getSetYear","o","defaultLocaleMonths","defaultLocaleWeek","defaultLocaleWeekdays","defaultLocaleWeekdaysMin","kInput","_isPm","pos","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","dayOfMonthOrdinalParse","meridiemParse","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","prototypeMin","prototypeMax","invalid","lang","isoWeekYear","getSetDayOfMonth","getSetMinute","getSetSecond","getSetMillisecond","proto","isoWeeks","isoWeeksInYear","isDST","zoneAbbr","zoneName","dates","isDSTShifted","proto$1","firstDayOfYear","firstDayOfWeek","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","proto$2","toIsoString","version","relativeTimeRounding","relativeTimeThreshold","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","193","webpackPolyfill","paths","children","194","__WEBPACK_IMPORTED_MODULE_0_jquery__","__WEBPACK_IMPORTED_MODULE_0_jquery___default","Formats","month_names","DayFormat","MonthFormat","Time","mins","getMinutes","getHours","element","event","$temp","append","select","document","execCommand","remove","prependTo","delay","fadeOut","calculateAge","birthday","birthDate","age","getYear"],"mappings":"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","file":"static/js/1.98e63d56.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 189:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_api_js__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_jquery__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_router_dom__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__loader_svg__ = __webpack_require__(76);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__loader_svg___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__loader_svg__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_Header_js__ = __webpack_require__(74);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utils_Formats__ = __webpack_require__(194);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_moment__ = __webpack_require__(192);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_moment__);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var MyContract=function(_Component){_inherits(MyContract,_Component);function MyContract(props){_classCallCheck(this,MyContract);var _this=_possibleConstructorReturn(this,(MyContract.__proto__||Object.getPrototypeOf(MyContract)).call(this,props));_this.getBonusDetails=function(){__WEBPACK_IMPORTED_MODULE_1__utils_api_js__[\"a\" /* default */].get('contract/getContracts').then(function(response){var details=response.data.data;_this.setState({details:details});});};_this.state={details:''};return _this;}_createClass(MyContract,[{key:'componentWillMount',value:function componentWillMount(){var _this2=this;__WEBPACK_IMPORTED_MODULE_5__components_Header_js__[\"a\" /* default */].getInstance().updateTitle('My Contracts');if(localStorage.getItem('auth_token')!=null){setTimeout(function(){_this2.getBonusDetails();},1000);}__WEBPACK_IMPORTED_MODULE_2_jquery___default()('body').addClass('right-only');}},{key:'render',value:function render(){__WEBPACK_IMPORTED_MODULE_2_jquery___default()(function(){__WEBPACK_IMPORTED_MODULE_2_jquery___default()('.my-contract').on('click',function(){__WEBPACK_IMPORTED_MODULE_2_jquery___default()(this).closest('.App').find('.contract-details').slideToggle();__WEBPACK_IMPORTED_MODULE_2_jquery___default()('html, body').animate({scrollTop:__WEBPACK_IMPORTED_MODULE_2_jquery___default()(this).offset().top-18},500);});});var status={DEPLOYED:'Deployed',FAILED_TO_DEPLOY:'Failed to Deploy',WAITING_FOR_DEPLOYMENT:'Waiting for deployment'};var statusclassName={DEPLOYED:' gool fa fa-check green',FAILED_TO_DEPLOY:'gool fa fa-times red',WAITING_FOR_DEPLOYMENT:'gool fa fa-spinner fa-spin yellow'};return localStorage.getItem('auth_token')!==null?this.state.details?this.state.details.length>0?this.state.details.map(function(list,i){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{key:i,className:'main-list'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'create-contract'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'App'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'row '},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-md-9'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'card card-contributions  '},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'flex my-contract'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img',{src:'../../assets/img/ethereum.png',alt:''}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'card-header '},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('h4',{className:'contract-name'},list.name?list.name:'Token Name')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'card-body text-right deployedd'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:statusclassName[list.deployment_status]}),status[list.deployment_status]))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'card-footer contract-details '},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'mint'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('table',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tbody',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Token Owner'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.contract_owner?list.contract_owner.substring(0,20)+\" ...\":'-',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'fa fa-clone copy-to-clipboard',title:'copy to clipboard',onClick:function onClick(){return __WEBPACK_IMPORTED_MODULE_6__utils_Formats__[\"a\" /* default */].copyToClipboard(list.contract_owner?list.contract_owner:'-');}}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Transaction Hash'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.transactionHash?__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{target:'_blank',href:'https://rinkeby.etherscan.io/tx/'+list.transactionHash},list.transactionHash.substring(0,20)+\" ...\"):'-',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'fa fa-clone copy-to-clipboard',title:'copy to clipboard',onClick:function onClick(){return __WEBPACK_IMPORTED_MODULE_6__utils_Formats__[\"a\" /* default */].copyToClipboard(list.transactionHash?list.transactionHash:'-');}}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',{className:list.deployment_status!=='DEPLOYED'?'none':''},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Contract Address'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('a',{target:'_blank',href:'https://rinkeby.etherscan.io/address/'+list.contract_address},list.contract_address?list.contract_address.substring(0,20)+\"...\":'-'),' ',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'fa fa-clone copy-to-clipboard',title:'copy to clipboard',onClick:function onClick(){return __WEBPACK_IMPORTED_MODULE_6__utils_Formats__[\"a\" /* default */].copyToClipboard(list.contract_address?list.contract_address:'-');}}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Created Date'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,__WEBPACK_IMPORTED_MODULE_6__utils_Formats__[\"a\" /* default */].DateFormat(list.create_date))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Opening Time'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,__WEBPACK_IMPORTED_MODULE_7_moment___default()(list.opening_time).format('DD MMM, YYYY'))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'End Time'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,__WEBPACK_IMPORTED_MODULE_7_moment___default()(list.end_time).format('DD MMM, YYYY'),' ')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Hardcap Tokens'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.hardcap_tokens)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Investment Storage'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.investment_storage.substring(0,20)+\" ...\",__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'fa fa-clone copy-to-clipboard',title:'copy to clipboard',onClick:function onClick(){return __WEBPACK_IMPORTED_MODULE_6__utils_Formats__[\"a\" /* default */].copyToClipboard(list.investment_storage?list.investment_storage:'-');}}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Min Investment'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.min_investment)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Max Investment'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.max_investment)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Rate'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.rate)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Token Name'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.token_name)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Token Symbol'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.token_symbol)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',{className:list.bonus_percent<=0?'none':''},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Bonus Percent'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.bonus_percent,'%')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',{className:list.team_address===''?'none':''},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Address'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.team_address?list.team_address.substring(0,20)+\" ...\":'0x0',__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'fa fa-clone copy-to-clipboard',title:'copy to clipboard',onClick:function onClick(){return __WEBPACK_IMPORTED_MODULE_6__utils_Formats__[\"a\" /* default */].copyToClipboard(list.team_address?list.team_address:'-');}}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',{className:list.team_address===''?'none':''},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Token Amount'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.team_tokens?list.team_tokens:0)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Tranferrable'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.tranferrable?'✔':'✘')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Whitelisting'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.whitelisting?'✔':'✘')),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',{className:'bold'},'Change Date'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('td',null,list.changedate?'✔':'✘'))))))))))));}):__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-md-9 card card-center'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',null,'The list of smart contracts is empty'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__[\"b\" /* Link */],{to:'/createContract',className:'btn btn-info btn-round data-color'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'fa fa-plus'}),' Create Contract')):__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'loader'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('img',{src:__WEBPACK_IMPORTED_MODULE_4__loader_svg___default.a,className:'App-loader',alt:'logo'}),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('label',null,'Please Wait...')):__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'col-md-9 card card-center'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('p',null,'The list of smart contracts is empty'),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_router_dom__[\"b\" /* Link */],{to:'/createContract',className:'btn btn-info btn-round data-color'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('i',{className:'fa fa-plus'}),' Create Contract'));}}]);return MyContract;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"default\"] = (MyContract);\n\n/***/ }),\n\n/***/ 192:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js\n\n;(function (global, factory) {\n     true ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                !(function webpackMissingModule() { var e = new Error(\"Cannot find module \\\"./locale\\\"\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.22.2';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(193)(module)))\n\n/***/ }),\n\n/***/ 193:\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ }),\n\n/***/ 194:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);\nvar Formats={};Formats.DateFormat=function(dates){var date=new Date(dates);var month_names=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];var month=month_names[date.getMonth()];var day=date.getDate();var year=date.getFullYear();var formated=day+\" \"+month+\",\\xa0\"+year;return formated;};Formats.DayFormat=function(dates){var date=new Date(dates);return date.getDate();};Formats.MonthFormat=function(dates){var date=new Date(dates);var month_names=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];return month_names[date.getMonth()];};Formats.Time=function(dates){var date=new Date(dates);var mins=date.getMinutes();var hrs=date.getHours();return hrs+\":\"+mins;};Formats.copyToClipboard=function(element,event){var $temp=__WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"<input>\");__WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"body\").append($temp);$temp.val(element).select();document.execCommand(\"copy\");$temp.remove();__WEBPACK_IMPORTED_MODULE_0_jquery___default()('<div class=\"copy-notification\">Copied to clipboard</div>').prependTo('body').delay(1000).fadeOut(200,function(){__WEBPACK_IMPORTED_MODULE_0_jquery___default()('.copy-notification').remove();});};Formats.calculateAge=function(birthday){// birthday is a date\nvar birthDate=new Date(birthday);var currentDate=new Date();var age=currentDate.getYear()-birthDate.getYear();if(currentDate.getMonth()/1<birthDate.getMonth()){age--;}else if(currentDate.getMonth()/1===(birthDate.getMonth()&&currentDate.getDay()/1<=birthDate.getDay())){age--;}if(age<18){return false;}return true;};/* harmony default export */ __webpack_exports__[\"a\"] = (Formats);\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.98e63d56.chunk.js","import React, { Component } from 'react';\nimport api from '../utils/api.js';\nimport $ from 'jquery';\nimport { Link } from \"react-router-dom\";\nimport loader from '../loader.svg';\nimport Header from '../components/Header.js';\nimport Formats from '../utils/Formats'\nimport moment from 'moment';\n\nclass MyContract extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            details: '',\n        }\n    }\n\n    componentWillMount() {\n        Header.getInstance().updateTitle('My Contracts');\n        if (localStorage.getItem('auth_token') != null) {\n            setTimeout(() => {\n                this.getBonusDetails();\n            }, 1000);\n        }\n        $('body').addClass('right-only')\n    }\n\n\n    getBonusDetails = () => {\n        api.get(`contract/getContracts`)\n            .then((response) => {\n                const details = response.data.data;\n                this.setState({\n                    details: details\n                })\n            })\n    }\n    render() {\n        $(function () {\n            $('.my-contract').on('click', function () {\n                $(this).closest('.App').find('.contract-details').slideToggle();\n                $('html, body').animate({\n                    scrollTop: $(this).offset().top - 18\n                }, 500);\n            });\n\n        });\n        var status = {\n            DEPLOYED: 'Deployed',\n            FAILED_TO_DEPLOY: 'Failed to Deploy',\n            WAITING_FOR_DEPLOYMENT: 'Waiting for deployment',\n        }\n        var statusclassName = {\n            DEPLOYED: ' gool fa fa-check green',\n            FAILED_TO_DEPLOY: 'gool fa fa-times red',\n            WAITING_FOR_DEPLOYMENT: 'gool fa fa-spinner fa-spin yellow',\n        }\n\n        return (\n            localStorage.getItem('auth_token') !== null ? (\n                this.state.details ?\n                    this.state.details.length > 0 ? this.state.details.map((list, i) => (<div key={i} className=\"main-list\">\n                        <div className=\"create-contract\">\n                            <div className=\"App\">\n                                <div className=\"row \">\n                                    <div className=\"col-md-9\">\n                                        <div className=\"card card-contributions  \">\n                                            <div className=\"flex my-contract\">\n                                                <img src=\"../../assets/img/ethereum.png\" alt=\"\" />\n                                                <div className=\"card-header \">\n                                                    <h4 className=\"contract-name\">{list.name ? list.name : 'Token Name'}</h4>\n                                                </div>\n                                                <div className=\"card-body text-right deployedd\">\n                                                    <div>\n                                                        <i className={statusclassName[list.deployment_status]} ></i>{status[list.deployment_status]}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"card-footer contract-details \">\n                                                <div className=\"mint\">\n                                                    <table><tbody>\n                                                        <tr><td className=\"bold\">Token Owner</td><td>{list.contract_owner ? list.contract_owner.substring(0, 20) + \" ...\" : '-'}<i className=\"fa fa-clone copy-to-clipboard\" title=\"copy to clipboard\" onClick={() => Formats.copyToClipboard(list.contract_owner ? list.contract_owner : '-')}></i></td></tr>\n                                                        <tr ><td className=\"bold\">Transaction Hash</td><td>{list.transactionHash ? <a target=\"_blank\" href={'https://rinkeby.etherscan.io/tx/' + list.transactionHash}>{list.transactionHash.substring(0, 20) + \" ...\"}</a> : '-'}<i className=\"fa fa-clone copy-to-clipboard\" title=\"copy to clipboard\" onClick={() => Formats.copyToClipboard(list.transactionHash ? list.transactionHash : '-')}></i></td></tr>\n                                                        <tr className={list.deployment_status !== 'DEPLOYED' ? 'none' : ''}><td className=\"bold\">Contract Address</td><td><a target=\"_blank\" href={'https://rinkeby.etherscan.io/address/' + list.contract_address}>{list.contract_address ? list.contract_address.substring(0, 20) + \"...\" : '-'}</a> <i className=\"fa fa-clone copy-to-clipboard\" title=\"copy to clipboard\" onClick={() => Formats.copyToClipboard(list.contract_address ? list.contract_address : '-')}></i></td></tr>\n                                                        <tr><td className=\"bold\">Created Date</td><td>{Formats.DateFormat(list.create_date)}</td></tr>\n                                                        <tr><td className=\"bold\">Opening Time</td><td>{moment(list.opening_time).format('DD MMM, YYYY')}</td></tr>\n                                                        <tr><td className=\"bold\">End Time</td><td>{moment(list.end_time).format('DD MMM, YYYY')} </td></tr>\n                                                        <tr><td className=\"bold\">Hardcap Tokens</td><td>{list.hardcap_tokens}</td></tr>\n                                                        <tr><td className=\"bold\">Investment Storage</td><td>{list.investment_storage.substring(0, 20) + \" ...\"}<i className=\"fa fa-clone copy-to-clipboard\" title=\"copy to clipboard\" onClick={() => Formats.copyToClipboard(list.investment_storage ? list.investment_storage : '-')}></i></td></tr>\n                                                        <tr><td className=\"bold\">Min Investment</td><td>{list.min_investment}</td></tr>\n                                                        <tr><td className=\"bold\">Max Investment</td><td>{list.max_investment}</td></tr>\n                                                        <tr><td className=\"bold\">Rate</td><td>{list.rate}</td></tr>\n                                                        <tr><td className=\"bold\">Token Name</td><td>{list.token_name}</td></tr>\n                                                        <tr><td className=\"bold\">Token Symbol</td><td>{list.token_symbol}</td></tr>\n                                                        <tr className={list.bonus_percent <= 0 ? 'none' : ''}><td className=\"bold\">Bonus Percent</td><td>{list.bonus_percent}%</td></tr>\n                                                        <tr className={list.team_address === '' ? 'none' : ''}><td className=\"bold\">Address</td><td>{list.team_address ? list.team_address.substring(0, 20) + \" ...\" : '0x0'}<i className=\"fa fa-clone copy-to-clipboard\" title=\"copy to clipboard\" onClick={() => Formats.copyToClipboard(list.team_address ? list.team_address : '-')}></i></td></tr>\n                                                        <tr className={list.team_address === '' ? 'none' : ''}><td className=\"bold\">Token Amount</td><td>{list.team_tokens ? list.team_tokens : 0}</td></tr>\n                                                        <tr><td className=\"bold\">Tranferrable</td><td>{list.tranferrable ? '✔' : '✘'}</td></tr>\n                                                        <tr><td className=\"bold\">Whitelisting</td><td>{list.whitelisting ? '✔' : '✘'}</td></tr>\n                                                        <tr><td className=\"bold\">Change Date</td><td>{list.changedate ? '✔' : '✘'}</td></tr>\n                                                    </tbody></table>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>)) : <div className=\"col-md-9 card card-center\"><p>The list of smart contracts is empty</p><Link to=\"/createContract\" className=\"btn btn-info btn-round data-color\"><i className=\"fa fa-plus\"></i> Create Contract</Link></div> : <div className=\"loader\"><img src={loader} className=\"App-loader\" alt=\"logo\" /><label>Please Wait...</label></div>) : <div className=\"col-md-9 card card-center\"><p>The list of smart contracts is empty</p><Link to=\"/createContract\" className=\"btn btn-info btn-round data-color\"><i className=\"fa fa-plus\"></i> Create Contract</Link></div>\n        );\n    }\n}\n\nexport default MyContract;\n\n\n// WEBPACK FOOTER //\n// ./src/Modules/MyContract.js","//! moment.js\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return input != null && Object.prototype.toString.call(input) === '[object Object]';\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return (Object.getOwnPropertyNames(obj).length === 0);\n        } else {\n            var k;\n            for (k in obj) {\n                if (obj.hasOwnProperty(k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false,\n            parsedDateParts : [],\n            meridiem        : null,\n            rfc2822         : false,\n            weekdayMismatch : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this);\n            var len = t.length >>> 0;\n\n            for (var i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            var parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            var isNowValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid = isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            }\n            else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid (flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i = 0; i < momentProperties.length; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function warn(msg) {\n        if (hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [];\n                var arg;\n                for (var i = 0; i < arguments.length; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (var key in arguments[0]) {\n                            arg += key + ': ' + arguments[0][key] + ', ';\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' + (/\\d{1,2}/).source);\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig), prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (hasOwnProp(parentConfig, prop) &&\n                    !hasOwnProp(childConfig, prop) &&\n                    isObject(parentConfig[prop])) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i, res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function calendar (key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        ss : '%d seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [];\n        for (var u in unitsObj) {\n            units.push({unit: u, priority: priorities[u]});\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '', i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function set$1 (mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n            }\n            else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet (units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n\n    function stringSet (units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units);\n            for (var i = 0; i < prioritized.length; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        if (!m) {\n            return isArray(this._months) ? this._months :\n                this._months['standalone'];\n        }\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        if (!m) {\n            return isArray(this._monthsShort) ? this._monthsShort :\n                this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i, ii, mom, llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    }\n\n    function createDate (y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd',   function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd',   function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        if (!m) {\n            return isArray(this._weekdays) ? this._weekdays :\n                this._weekdays['standalone'];\n        }\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    var defaultWeekdaysRegex = matchWord;\n    function weekdaysRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n\n    var defaultWeekdaysShortRegex = matchWord;\n    function weekdaysShortRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n\n    var defaultWeekdaysMinRegex = matchWord;\n    function weekdaysMinRegex (isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n\n\n    function computeWeekdaysParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom, minp, shortp, longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = this.weekdaysMin(mom, '');\n            shortp = this.weekdaysShort(mom, '');\n            longp = this.weekdays(mom, '');\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('k',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour they want. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse\n    };\n\n    // internal storage for locale config files\n    var locales = {};\n    var localeFamilies = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                var aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {}\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n            else {\n                if ((typeof console !==  'undefined') && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, config) {\n        if (config !== null) {\n            var locale, parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple('defineLocaleOverride',\n                        'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale, tmpLocale, parentConfig = baseConfig;\n            // MERGE\n            tmpLocale = loadLocale(name);\n            if (tmpLocale != null) {\n                parentConfig = tmpLocale._config;\n            }\n            config = mergeConfigs(parentConfig, config);\n            locale = new Locale(config);\n            locale.parentLocale = locales[name];\n            locales[name] = locale;\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, expectedWeekday, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            var curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10)\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    var obsOffsets = {\n        UT: 0,\n        GMT: 0,\n        EDT: -4 * 60,\n        EST: -5 * 60,\n        CDT: -5 * 60,\n        CST: -6 * 60,\n        MDT: -6 * 60,\n        MST: -7 * 60,\n        PDT: -7 * 60,\n        PST: -8 * 60\n    };\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10);\n            var m = hm % 100, h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i));\n        if (match) {\n            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        // Final attempt, use Input Fallback\n        hooks.createFromInputFallback(config);\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n        'discouraged and will be removed in an upcoming major release. Please refer to ' +\n        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        }  else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if ((isObject(input) && isObjectEmpty(input)) ||\n                (isArray(input) && input.length === 0)) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other < this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n        function () {\n            var other = createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n    function isDurationValid(m) {\n        for (var key in m) {\n            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n                return false;\n            }\n        }\n\n        var unitHasDecimal = false;\n        for (var i = 0; i < ordering.length; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound (number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher);\n\n        if (matches === null) {\n            return null;\n        }\n\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ?\n          0 :\n          parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            }\n            else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    // and further modified to allow for strings containing both week and day\n    var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (isNumber(input)) {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])                         * sign,\n                h  : toInt(match[HOUR])                         * sign,\n                m  : toInt(match[MINUTE])                       * sign,\n                s  : toInt(match[SECOND])                       * sign,\n                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                w : parseIso(match[4], sign),\n                d : parseIso(match[5], sign),\n                h : parseIso(match[6], sign),\n                m : parseIso(match[7], sign),\n                s : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add      = createAdder(1, 'add');\n    var subtract = createAdder(-1, 'subtract');\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n    }\n\n    function calendar$1 (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween (from, to, units, inclusivity) {\n        inclusivity = inclusivity || '()';\n        return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n            (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year': output = monthDiff(this, that) / 12; break;\n            case 'month': output = monthDiff(this, that); break;\n            case 'quarter': output = monthDiff(this, that) / 3; break;\n            case 'second': output = (this - that) / 1e3; break; // 1000\n            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60\n            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60\n            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default: output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true;\n        var m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect () {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment';\n        var zone = '';\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        var prefix = '[' + func + '(\"]';\n        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n        var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        var suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format (inputString) {\n        if (!inputString) {\n            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 createLocal(time).isValid())) {\n            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n            case 'year':\n                this.month(0);\n                /* falls through */\n            case 'quarter':\n            case 'month':\n                this.date(1);\n                /* falls through */\n            case 'week':\n            case 'isoWeek':\n            case 'day':\n            case 'date':\n                this.hours(0);\n                /* falls through */\n            case 'hour':\n                this.minutes(0);\n                /* falls through */\n            case 'minute':\n                this.seconds(0);\n                /* falls through */\n            case 'second':\n                this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n\n        // 'date' is an alias for 'day', so it should be considered as such.\n        if (units === 'date') {\n            units = 'day';\n        }\n\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function valueOf () {\n        return this._d.valueOf() - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate () {\n        return new Date(this.valueOf());\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2 () {\n        return isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict ?\n          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n          locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add               = add;\n    proto.calendar          = calendar$1;\n    proto.clone             = clone;\n    proto.diff              = diff;\n    proto.endOf             = endOf;\n    proto.format            = format;\n    proto.from              = from;\n    proto.fromNow           = fromNow;\n    proto.to                = to;\n    proto.toNow             = toNow;\n    proto.get               = stringGet;\n    proto.invalidAt         = invalidAt;\n    proto.isAfter           = isAfter;\n    proto.isBefore          = isBefore;\n    proto.isBetween         = isBetween;\n    proto.isSame            = isSame;\n    proto.isSameOrAfter     = isSameOrAfter;\n    proto.isSameOrBefore    = isSameOrBefore;\n    proto.isValid           = isValid$2;\n    proto.lang              = lang;\n    proto.locale            = locale;\n    proto.localeData        = localeData;\n    proto.max               = prototypeMax;\n    proto.min               = prototypeMin;\n    proto.parsingFlags      = parsingFlags;\n    proto.set               = stringSet;\n    proto.startOf           = startOf;\n    proto.subtract          = subtract;\n    proto.toArray           = toArray;\n    proto.toObject          = toObject;\n    proto.toDate            = toDate;\n    proto.toISOString       = toISOString;\n    proto.inspect           = inspect;\n    proto.toJSON            = toJSON;\n    proto.toString          = toString;\n    proto.unix              = unix;\n    proto.valueOf           = valueOf;\n    proto.creationData      = creationData;\n    proto.year       = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear    = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month       = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week           = proto.weeks        = getSetWeek;\n    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\n    proto.weeksInYear    = getWeeksInYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.date       = getSetDayOfMonth;\n    proto.day        = proto.days             = getSetDayOfWeek;\n    proto.weekday    = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear  = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset            = getSetOffset;\n    proto.utc                  = setOffsetToUTC;\n    proto.local                = setOffsetToLocal;\n    proto.parseZone            = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST                = isDaylightSavingTime;\n    proto.isLocal              = isLocal;\n    proto.isUtcOffset          = isUtcOffset;\n    proto.isUtc                = isUtc;\n    proto.isUTC                = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n    function createUnix (input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone () {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar        = calendar;\n    proto$1.longDateFormat  = longDateFormat;\n    proto$1.invalidDate     = invalidDate;\n    proto$1.ordinal         = ordinal;\n    proto$1.preparse        = preParsePostFormat;\n    proto$1.postformat      = preParsePostFormat;\n    proto$1.relativeTime    = relativeTime;\n    proto$1.pastFuture      = pastFuture;\n    proto$1.set             = set;\n\n    proto$1.months            =        localeMonths;\n    proto$1.monthsShort       =        localeMonthsShort;\n    proto$1.monthsParse       =        localeMonthsParse;\n    proto$1.monthsRegex       = monthsRegex;\n    proto$1.monthsShortRegex  = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays       =        localeWeekdays;\n    proto$1.weekdaysMin    =        localeWeekdaysMin;\n    proto$1.weekdaysShort  =        localeWeekdaysShort;\n    proto$1.weekdaysParse  =        localeWeekdaysParse;\n\n    proto$1.weekdaysRegex       =        weekdaysRegex;\n    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;\n    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1 (format, index, field, setter) {\n        var locale = getLocale();\n        var utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl (format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl (localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0;\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths (format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort (format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin (localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\n    var mathAbs = Math.abs;\n\n    function abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1 (duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1 (input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1 (input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1 () {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function clone$1 () {\n        return createDuration(this);\n    }\n\n    function get$2 (units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        ss: 44,         // a few seconds to seconds\n        s : 45,         // seconds to minute\n        m : 45,         // minutes to hour\n        h : 22,         // hours to day\n        d : 26,         // days to month\n        M : 11          // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n        var duration = createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds <= thresholds.ss && ['s', seconds]  ||\n                seconds < thresholds.s   && ['ss', seconds] ||\n                minutes <= 1             && ['m']           ||\n                minutes < thresholds.m   && ['mm', minutes] ||\n                hours   <= 1             && ['h']           ||\n                hours   < thresholds.h   && ['hh', hours]   ||\n                days    <= 1             && ['d']           ||\n                days    < thresholds.d   && ['dd', days]    ||\n                months  <= 1             && ['M']           ||\n                months  < thresholds.M   && ['MM', months]  ||\n                years   <= 1             && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding (roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof(roundingFunction) === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var locale = this.localeData();\n        var output = relativeTime$1(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return ((x > 0) - (x < 0)) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000;\n        var days         = abs$1(this._days);\n        var months       = abs$1(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        var totalSign = total < 0 ? '-' : '';\n        var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return totalSign + 'P' +\n            (Y ? ymSign + Y + 'Y' : '') +\n            (M ? ymSign + M + 'M' : '') +\n            (D ? daysSign + D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? hmsSign + h + 'H' : '') +\n            (m ? hmsSign + m + 'M' : '') +\n            (s ? hmsSign + s + 'S' : '');\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid        = isValid$1;\n    proto$2.abs            = abs;\n    proto$2.add            = add$1;\n    proto$2.subtract       = subtract$1;\n    proto$2.as             = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds      = asSeconds;\n    proto$2.asMinutes      = asMinutes;\n    proto$2.asHours        = asHours;\n    proto$2.asDays         = asDays;\n    proto$2.asWeeks        = asWeeks;\n    proto$2.asMonths       = asMonths;\n    proto$2.asYears        = asYears;\n    proto$2.valueOf        = valueOf$1;\n    proto$2._bubble        = bubble;\n    proto$2.clone          = clone$1;\n    proto$2.get            = get$2;\n    proto$2.milliseconds   = milliseconds;\n    proto$2.seconds        = seconds;\n    proto$2.minutes        = minutes;\n    proto$2.hours          = hours;\n    proto$2.days           = days;\n    proto$2.weeks          = weeks;\n    proto$2.months         = months;\n    proto$2.years          = years;\n    proto$2.humanize       = humanize;\n    proto$2.toISOString    = toISOString$1;\n    proto$2.toString       = toISOString$1;\n    proto$2.toJSON         = toISOString$1;\n    proto$2.locale         = locale;\n    proto$2.localeData     = localeData;\n\n    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n    proto$2.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    hooks.version = '2.22.2';\n\n    setHookCallback(createLocal);\n\n    hooks.fn                    = proto;\n    hooks.min                   = min;\n    hooks.max                   = max;\n    hooks.now                   = now;\n    hooks.utc                   = createUTC;\n    hooks.unix                  = createUnix;\n    hooks.months                = listMonths;\n    hooks.isDate                = isDate;\n    hooks.locale                = getSetGlobalLocale;\n    hooks.invalid               = createInvalid;\n    hooks.duration              = createDuration;\n    hooks.isMoment              = isMoment;\n    hooks.weekdays              = listWeekdays;\n    hooks.parseZone             = createInZone;\n    hooks.localeData            = getLocale;\n    hooks.isDuration            = isDuration;\n    hooks.monthsShort           = listMonthsShort;\n    hooks.weekdaysMin           = listWeekdaysMin;\n    hooks.defineLocale          = defineLocale;\n    hooks.updateLocale          = updateLocale;\n    hooks.locales               = listLocales;\n    hooks.weekdaysShort         = listWeekdaysShort;\n    hooks.normalizeUnits        = normalizeUnits;\n    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat        = getCalendarFormat;\n    hooks.prototype             = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD',                             // <input type=\"date\" />\n        TIME: 'HH:mm',                                  // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss',                       // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS',                        // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'YYYY-[W]WW',                             // <input type=\"week\" />\n        MONTH: 'YYYY-MM'                                // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/moment.js\n// module id = 192\n// module chunks = 0 1","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 193\n// module chunks = 0 1","import $ from 'jquery';\nlet Formats = {};\n\nFormats.DateFormat = (dates) => {\n    var date = new Date(dates);\n    var month_names = [\"Jan\", \"Feb\", \"Mar\",\n        \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\",\n        \"Oct\", \"Nov\", \"Dec\"];\n    var month = month_names[date.getMonth()];\n    var day = date.getDate();\n    var year = date.getFullYear();\n    var formated = day + \" \" + month + \",\\xa0\" + year;\n    return formated;\n}\n\nFormats.DayFormat = (dates) => {\n    var date = new Date(dates);\n    return date.getDate();\n}\n\nFormats.MonthFormat = (dates) => {\n    var date = new Date(dates);\n    var month_names = [\"Jan\", \"Feb\", \"Mar\",\n        \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\",\n        \"Oct\", \"Nov\", \"Dec\"];\n    return month_names[date.getMonth()];\n}\n\nFormats.Time = (dates) => {\n    var date = new Date(dates);\n    var mins = date.getMinutes();\n    var hrs = date.getHours();\n    return hrs + \":\" + mins;\n}\n\nFormats.copyToClipboard = (element, event) => {\n    var $temp = $(\"<input>\");\n    $(\"body\").append($temp);\n    $temp.val(element).select();\n    document.execCommand(\"copy\");\n    $temp.remove();\n    $('<div class=\"copy-notification\">Copied to clipboard</div>').prependTo('body').delay(1000).fadeOut(200, function () {\n        $('.copy-notification').remove();\n    });\n}\n\nFormats.calculateAge = (birthday) => { // birthday is a date\n    var birthDate = new Date(birthday);\n    var currentDate = new Date();\n    var age = currentDate.getYear() - birthDate.getYear();\n    if (currentDate.getMonth() / 1 < birthDate.getMonth()) {\n        age--;\n    } else if (currentDate.getMonth() / 1 === (birthDate.getMonth() && currentDate.getDay() / 1 <= birthDate.getDay())) {\n        age--;\n    }\n    if (age < 18) {\n        return false;\n    }\n    return true;\n}\n\nexport default Formats;\n\n\n// WEBPACK FOOTER //\n// ./src/utils/Formats.js"],"sourceRoot":""}